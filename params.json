{"name":"Earthworm","tagline":"An ORM for Esri Geodatabase","body":"Earthworm - An ORM for Esri Geodatabase (via ArcObjects)\r\n=========\r\n\r\nA simple .NET assembly that provides an object-relational mapping abstraction layer for geodatabase feature classes and tables. It converts features and rows into a (lazy) sequence of strongly-typed objects.\r\n\r\n*You will need ArcGIS Desktop, Engine or Server 9.3.1, 10.0 or 10.1.\r\n\r\n[![A basic example](https://raw.github.com/jshirota/Earthworm/gh-pages/images/screenshot.png \"Click here to start!\")]\r\n(http://jshirota.github.com/Earthworm/ORMappingDeploy.application)\r\n\r\n-Fights the impedance mismatch between geodatabase tables and objects.\r\n\r\n-Does not get in the way of existing ArcObjects code.  It is basically the same as using ICursor.\r\n\r\n-Works with Desktop ArcObjects, Addin, SOE and Engine applications.\r\n\r\n-Does not require any auto-generated code.  No XML mapping files.  No dependency on the IDE.\r\n\r\n-Supports CRUD operations with intuitive syntax.\r\n\r\n-Supports runtime \"code first\" methods for creating feature classes and tables based on defined types.\r\n\r\n-Respects all geodatabase behaviours such as versions, edit sessions, etc.\r\n\r\n-Works with anything that implements IFeatureClass or ITable (i.e. shapefiles, coverages).  Note: The GUI tool only works with SDE, file and personal geodatabases.\r\n\r\n-Returns mapped objects as a lazy sequence implementing IEnumerable\\<T\\>.  Allows LINQ queries.\r\n\r\n-Encapsulates low-level ArcObjects \"ceremony code\" such as the cursor cleanup code.\r\n\r\n-Provides JSON serialization/deserialization compatible with ArcGIS REST API.\r\n\r\n-Provides KML serialization for geometries.\r\n\r\n-Enables common spatial operations and predicates as extension methods for IGeometry to avoid verbose interface casting code.\r\n\r\n-Provides class code generation for meta programming (i.e. code generation tools or runtime compilation via CodeDom or Roslyn).\r\n\r\n-All mapped classes implement INotifyPropertyChanged (for use with WPF).  All mapped properties automatically raise the PropertyChanged event upon property setter access (via IL weaving) without using an AOP library.\r\n\r\nThe library reference is here:\r\n\r\nhttp://jshirota.github.com/Earthworm/Help/Index.html\r\n\r\nThe NuGet package is here:\r\n\r\nhttp://nuget.org/packages/Earthworm\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}